name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          
      - name: Create .env file for cadv_api
        run: |
          echo "CURRENCY_URL=${{ secrets.CURRENCY_URL }}" >> build/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> build/.env
          echo "HOST=${{ secrets.HOST }}" >> build/.env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> build/.env
          echo "SECRT_REFRESH_KEY=${{ secrets.SECRT_REFRESH_KEY }}" >> build/.env
          
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker images using Docker Compose
        run: |
          docker-compose -f build/docker-compose.yml build
          docker-compose -f build/docker-compose.yml push

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
        
    - name: List files before deploy
      run: |
        ls

    - name: Print current working directory
      run: pwd
#    - name: Create .env file for deploy (cadv_api)
#      run: |
#        echo "CURRENCY_URL=${{ secrets.CURRENCY_URL }}" >> build/.env
#        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> build/.env
#        echo "HOST=${{ secrets.HOST }}" >> build/.env
#        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> build/.env
#        echo "SECRT_REFRESH_KEY=${{ secrets.SECRET_REFRESH_KEY }}" >> build/.env

    - name: Deploy using Docker Compose (cadv_api)
      run: |
        docker-compose -f ./build/docker-compose.yml up -d

