{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Backend API for managing user profiles, authentication, analytics, and more.",
        "title": "Cash Advisor API",
        "contact": {
            "name": "Mikhail Vakhrushin",
            "email": "lstwrd@yandex.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/v1",
    "paths": {
        "/analytics/expence": {
            "post": {
                "description": "Create a new expense entry.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Expense"
                ],
                "summary": "Create expense entry",
                "parameters": [
                    {
                        "description": "Expense details",
                        "name": "expense",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Expense"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Expense created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating expense",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/analytics/expence/{userID}": {
            "get": {
                "description": "Get a list of expenses for a specific user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Expense"
                ],
                "summary": "Get expenses by user ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of expenses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Expense"
                            }
                        }
                    },
                    "500": {
                        "description": "Error querying expenses",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/analytics/expense": {
            "post": {
                "description": "Create a new expense.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Create an expense",
                "parameters": [
                    {
                        "description": "Expense object",
                        "name": "expense",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Expense"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Expense created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating expense",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/analytics/income": {
            "post": {
                "description": "Create a new income.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Create an income",
                "parameters": [
                    {
                        "description": "Income object",
                        "name": "income",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Income"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Income created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating income",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/analytics/wealth_fund": {
            "post": {
                "description": "Create a new wealth fund.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Create a wealth fund",
                "parameters": [
                    {
                        "description": "Wealth fund object",
                        "name": "wealthFund",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.WealthFund"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Wealth fund created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating wealth fund",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/category/expense": {
            "post": {
                "description": "Create a new expense category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Create an expense category",
                "parameters": [
                    {
                        "description": "Expense category object",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ExpenseCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Expense category created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating expense category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/category/income": {
            "post": {
                "description": "Create a new income category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Create an income category",
                "parameters": [
                    {
                        "description": "Income category object",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IncomeCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Income category created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating income category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/category/investment": {
            "post": {
                "description": "Create a new investment category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Create an investment category",
                "parameters": [
                    {
                        "description": "Investment category object",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InvestmentCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Investment category created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating investment category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login to the system and get an authentication token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login to the system",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logs out the user, terminating the session.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout the user",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error registering user",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/sessions": {
            "get": {
                "description": "Get information about active user sessions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "List of active user sessions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/auth.ActiveUser"
                            }
                        }
                    }
                }
            }
        },
        "/categories/analytics/{userID}": {
            "get": {
                "description": "Get income, expense, and wealth fund data for a specific user from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get user analytics from the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User analytics data",
                        "schema": {
                            "$ref": "#/definitions/categories.Analytics"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/categories/app/{userID}": {
            "get": {
                "description": "Get app details, including connected accounts, category settings, and operation archive, for a specific user from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get app information from the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "App information",
                        "schema": {
                            "$ref": "#/definitions/models.App"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/categories/categorysettings/{userID}": {
            "get": {
                "description": "Get category settings, including income, expense, and investment category details, for a specific user from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get category settings information from the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category settings information",
                        "schema": {
                            "$ref": "#/definitions/models.CategorySettings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/categories/connectedaccounts/{userID}": {
            "get": {
                "description": "Get connected accounts details for a specific user from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get connected accounts information from the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connected accounts information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ConnectedAccount"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/categories/more/{userID}": {
            "get": {
                "description": "Get more details, including app and settings information, for a specific user from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get additional user information from the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Additional user information",
                        "schema": {
                            "$ref": "#/definitions/categories.More"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/categories/operationarchive/{userID}": {
            "get": {
                "description": "Get operation archive details for a specific user from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get operation archive information from the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation archive information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Operation"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/categories/subscription/{userID}": {
            "get": {
                "description": "Get subscription details for a specific user from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get subscription information from the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription information",
                        "schema": {
                            "$ref": "#/definitions/models.Subscription"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/categories/tracker/{userID}": {
            "get": {
                "description": "Get tracking state and goal data for a specific user from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get user tracker data from the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User analytics data",
                        "name": "analytics",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/categories.Analytics"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User tracker data",
                        "schema": {
                            "$ref": "#/definitions/categories.Tracker"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/categories/userinfo/{userID}": {
            "get": {
                "description": "Get username and name information for a specific user from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get user information from the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/docs/swagger.json": {
            "get": {
                "description": "Get the Swagger JSON file.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Swagger"
                ],
                "summary": "Get Swagger JSON",
                "responses": {
                    "200": {
                        "description": "Swagger JSON retrieved successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/history/add": {
            "post": {
                "description": "Add a new entry to the history.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "History"
                ],
                "summary": "Add history entry",
                "responses": {
                    "200": {
                        "description": "History entry added successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/history/get": {
            "get": {
                "description": "Get a list of history entries.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "History"
                ],
                "summary": "Get history entries",
                "responses": {
                    "200": {
                        "description": "List of history entries",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/logger": {
            "post": {
                "description": "Initialize the info and error loggers.",
                "tags": [
                    "Logger"
                ],
                "summary": "Initialize loggers",
                "responses": {}
            }
        },
        "/models/expense/category": {
            "post": {
                "description": "Create a new expense category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Expense"
                ],
                "summary": "Create expense category",
                "parameters": [
                    {
                        "description": "Expense category details",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ExpenseCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Expense category created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating expense category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/models/goal": {
            "post": {
                "description": "Create a new goal entry.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "Create goal",
                "parameters": [
                    {
                        "description": "Goal details",
                        "name": "goal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Goal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Goal created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating goal",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/models/goal/{userID}": {
            "get": {
                "description": "Get a list of goals for a specific user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "Get goals by user ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of goals",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Goal"
                            }
                        }
                    },
                    "500": {
                        "description": "Error querying goals",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/models/income": {
            "post": {
                "description": "Create a new income entry.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Income"
                ],
                "summary": "Create income entry",
                "parameters": [
                    {
                        "description": "Income details",
                        "name": "income",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Income"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Income created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating income",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/models/income/category": {
            "post": {
                "description": "Create a new income category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Income"
                ],
                "summary": "Create income category",
                "parameters": [
                    {
                        "description": "Income category details",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IncomeCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Income category created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating income category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/models/income/{userID}": {
            "get": {
                "description": "Get a list of incomes for a specific user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Income"
                ],
                "summary": "Get incomes by user ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of incomes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Income"
                            }
                        }
                    },
                    "500": {
                        "description": "Error querying incomes",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/models/investment/category": {
            "post": {
                "description": "Create a new investment category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investment"
                ],
                "summary": "Create investment category",
                "parameters": [
                    {
                        "description": "Investment category details",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InvestmentCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Investment category created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating investment category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/models/subscription": {
            "post": {
                "description": "Create a new subscription entry.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscription"
                ],
                "summary": "Create subscription",
                "parameters": [
                    {
                        "description": "Subscription details",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Subscription"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subscription created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating subscription",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/models/tracking-state": {
            "post": {
                "description": "Create a new tracking state entry.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TrackingState"
                ],
                "summary": "Create tracking state",
                "parameters": [
                    {
                        "description": "Tracking state details",
                        "name": "trackingState",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrackingState"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Tracking state created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating tracking state",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/models/tracking-state/{userID}": {
            "get": {
                "description": "Get a list of tracking states for a specific user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TrackingState"
                ],
                "summary": "Get tracking states by user ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tracking states",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TrackingState"
                            }
                        }
                    },
                    "500": {
                        "description": "Error querying tracking states",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/models/wealth-fund": {
            "post": {
                "description": "Create a new wealth fund entry.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WealthFund"
                ],
                "summary": "Create wealth fund entry",
                "parameters": [
                    {
                        "description": "Wealth fund details",
                        "name": "wealthFund",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.WealthFund"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Wealth fund created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating wealth fund",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/models/wealth-fund/{userID}": {
            "get": {
                "description": "Get a list of wealth funds for a specific user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WealthFund"
                ],
                "summary": "Get wealth funds by user ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of wealth funds",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.WealthFund"
                            }
                        }
                    },
                    "500": {
                        "description": "Error querying wealth funds",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mydatabase/close": {
            "post": {
                "description": "Closes the connection to the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database"
                ],
                "summary": "Close database connection",
                "responses": {
                    "200": {
                        "description": "Database connection closed successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error closing database connection",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mydatabase/exec": {
            "post": {
                "description": "Executes a query on the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database"
                ],
                "summary": "Execute database query",
                "parameters": [
                    {
                        "description": "Database query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Query executed successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error executing database query",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mydatabase/init": {
            "post": {
                "description": "Initializes a connection to the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database"
                ],
                "summary": "Initialize database connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database URL",
                        "name": "databaseURL",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Database connection initialized successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error initializing database connection",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile/get": {
            "get": {
                "description": "Get the user profile for the authenticated user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error getting user profile",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/settings/subscription": {
            "post": {
                "description": "Create a new subscription.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Create a subscription",
                "parameters": [
                    {
                        "description": "Subscription object",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Subscription"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subscription created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating subscription",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/swagger/index.html": {
            "get": {
                "description": "Get the Swagger UI.",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Swagger"
                ],
                "summary": "Get Swagger UI",
                "responses": {
                    "200": {
                        "description": "Swagger UI retrieved successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/swagger/json": {
            "get": {
                "description": "Get the Swagger JSON file.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Swagger"
                ],
                "summary": "Get Swagger JSON",
                "responses": {
                    "200": {
                        "description": "Swagger JSON retrieved successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/swagger/ui": {
            "get": {
                "description": "Get the Swagger UI.",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Swagger"
                ],
                "summary": "Get Swagger UI",
                "responses": {
                    "200": {
                        "description": "Swagger UI retrieved successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tracker/goal": {
            "post": {
                "description": "Create a new goal.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tracker"
                ],
                "summary": "Create a goal",
                "parameters": [
                    {
                        "description": "Goal object",
                        "name": "goal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Goal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Goal created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating goal",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Register a new user with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error registering user",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.ActiveUser": {
            "type": "object",
            "properties": {
                "deviceID": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "categories.Analytics": {
            "type": "object",
            "properties": {
                "expense": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Expense"
                    }
                },
                "income": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Income"
                    }
                },
                "wealthFund": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.WealthFund"
                    }
                }
            }
        },
        "categories.More": {
            "type": "object",
            "properties": {
                "app": {
                    "$ref": "#/definitions/models.App"
                },
                "settings": {
                    "$ref": "#/definitions/models.Settings"
                }
            }
        },
        "categories.Tracker": {
            "type": "object",
            "properties": {
                "goal": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Goal"
                    }
                },
                "trackingState": {
                    "$ref": "#/definitions/models.TrackingState"
                }
            }
        },
        "models.App": {
            "type": "object",
            "properties": {
                "category_settings": {
                    "$ref": "#/definitions/models.CategorySettings"
                },
                "connected_accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ConnectedAccount"
                    }
                },
                "operation_archive": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Operation"
                    }
                }
            }
        },
        "models.CategorySettings": {
            "type": "object",
            "properties": {
                "expense_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ExpenseCategory"
                    }
                },
                "income_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IncomeCategory"
                    }
                },
                "investment_category": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.InvestmentCategory"
                    }
                }
            }
        },
        "models.ConnectedAccount": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Expense": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "planned": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.ExpenseCategory": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_constant": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Goal": {
            "type": "object",
            "properties": {
                "current_state": {
                    "type": "number"
                },
                "goal": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "need": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Income": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "planned": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.IncomeCategory": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_constant": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.InvestmentCategory": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_constant": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Operation": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "category": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Settings": {
            "type": "object",
            "properties": {
                "subscriptions": {
                    "$ref": "#/definitions/models.Subscription"
                }
            }
        },
        "models.Subscription": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.TrackingState": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.WealthFund": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "hashedPassword": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "headerKey": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}