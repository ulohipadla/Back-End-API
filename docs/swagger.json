{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Backend API for managing user profiles, authentication, analytics, and more.",
        "title": "Cash Advisor API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Mikhail Vakhrushin",
            "email": "wachrusz@gmail.com"
        },
        "version": "0.1"
    },
    "host": "localhost:8080",
    "basePath": "/v1",
    "paths": {
        "/analytics/income": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create a new income record.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Create an income",
                "parameters": [
                    {
                        "description": "Income object",
                        "name": "income",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Income"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Income created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating income",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/analytics/wealth_fund": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create a new wealth fund.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Create a wealth fund",
                "parameters": [
                    {
                        "description": "Wealth fund object",
                        "name": "wealthFund",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.WealthFund"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Wealth fund created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating wealth fund",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/category/expense": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates a new expense category in the database and returns its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "CreateExpenseCategoryHandler an expense category",
                "parameters": [
                    {
                        "description": "Expense category object",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ExpenseCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Expense category created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating expense category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/category/income": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create a new income category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create an income category",
                "parameters": [
                    {
                        "description": "Income category object",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IncomeCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Income category created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating income category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/category/investment": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create a new investment category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create an investment category",
                "parameters": [
                    {
                        "description": "Investment category object",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InvestmentCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Investment category created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating investment category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/connected-accounts/add": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create a new connected account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Create a connected account",
                "parameters": [
                    {
                        "description": "ConnectedAccount object",
                        "name": "ConnectedAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConnectedAccount"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Connected account created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error adding connected account",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/connected-accounts/delete": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete an existing connected account.",
                "tags": [
                    "App"
                ],
                "summary": "Delete a connected account",
                "parameters": [
                    {
                        "description": "ConnectedAccount object",
                        "name": "ConnectedAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConnectedAccount"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Connected account deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error deleting connected account",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login to the system and get an authentication token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login to the system",
                "parameters": [
                    {
                        "description": "UserAuthenticationRequest object",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserAuthenticationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Logs out the user, terminating the session.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout the user",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/email/confirm": {
            "post": {
                "description": "Confirms the user's email using a token and confirmation code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Email"
                ],
                "summary": "Confirm email",
                "parameters": [
                    {
                        "description": "Confirmation request",
                        "name": "confirmRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/token.ConfirmEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully confirmed email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/email/confirm-login": {
            "post": {
                "description": "Confirms the user's email for login using a token and confirmation code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Email"
                ],
                "summary": "Confirm email for login",
                "parameters": [
                    {
                        "description": "Confirmation request",
                        "name": "confirmRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/token.ConfirmEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully confirmed email for login",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/email/get-confirmation-code": {
            "get": {
                "description": "Retrieves the confirmation code for the provided email.",
                "tags": [
                    "Email"
                ],
                "summary": "Get confirmation code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved confirmation code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/email/send-confirmation": {
            "post": {
                "description": "Sends a confirmation email with a generated code.",
                "tags": [
                    "Email"
                ],
                "summary": "Send confirmation email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully sent confirmation code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/expenses": {
            "post": {
                "description": "Create a new expense record.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Expenses"
                ],
                "summary": "Create an expense",
                "parameters": [
                    {
                        "description": "Expense object",
                        "name": "expense",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Expense"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created an expense",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating expense",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/history/add": {
            "post": {
                "description": "Add a new entry to the history.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "History"
                ],
                "summary": "Add history entry",
                "responses": {
                    "200": {
                        "description": "History entry added successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/history/get": {
            "get": {
                "description": "Get a list of history entries.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "History"
                ],
                "summary": "Get history entries",
                "responses": {
                    "200": {
                        "description": "List of history entries",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/password/reset-confirm": {
            "post": {
                "description": "Confirms the password reset process using a token and code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Password"
                ],
                "summary": "Confirm password reset",
                "parameters": [
                    {
                        "description": "Confirmation request",
                        "name": "confirmRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/token.ConfirmEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully confirmed password reset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile/get": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get the user profile for the authenticated user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error getting user profile",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile/update-name": {
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update the user profile for the authenticated user with a new name and surname.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update user profile with name",
                "parameters": [
                    {
                        "description": "New name to be added to the profile",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error updating user profile",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/settings/subscription": {
            "post": {
                "description": "Create a new subscription record.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Create a subscription",
                "parameters": [
                    {
                        "description": "Subscription object",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Subscription"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subscription created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating subscription",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/support/request": {
            "post": {
                "description": "Send a support request to the technical support team.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Support"
                ],
                "summary": "Send support request",
                "parameters": [
                    {
                        "description": "Support request object",
                        "name": "supportRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.SupportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Support request sent successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error sending support request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tracker/goal": {
            "post": {
                "description": "Create a new goal.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tracker"
                ],
                "summary": "Create a goal",
                "parameters": [
                    {
                        "description": "Goal object",
                        "name": "goal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Goal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Goal created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating goal",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ConnectedAccount": {
            "type": "object",
            "properties": {
                "account_number": {
                    "type": "string"
                },
                "account_type": {
                    "type": "string"
                },
                "bank_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Expense": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "bank_account": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "planned": {
                    "type": "boolean"
                },
                "sent_to": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.ExpenseCategory": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_constant": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Goal": {
            "type": "object",
            "properties": {
                "current_state": {
                    "type": "number"
                },
                "goal": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "need": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Income": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "bank_account": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "planned": {
                    "type": "boolean"
                },
                "sender": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.IncomeCategory": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_constant": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.InvestmentCategory": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_constant": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Subscription": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.WealthFund": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "bank_account": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "planned": {
                    "$ref": "#/definitions/models.WelfareFund"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.WelfareFund": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "Planned",
                "Unplanned"
            ]
        },
        "token.ConfirmEmailRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "user.UserAuthenticationRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "v1.SupportRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "request_id": {
                    "type": "integer"
                },
                "subject": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "description": "To authorize,",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}